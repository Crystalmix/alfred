(function(){"use strict";var a;a=angular.module("alfredDirective",[]),a.factory("quickConnectParse",["constant",function(a){return{parse:function(b){var c,d,e,f,g;return e={},d=null,c=[["-p","--port [NUMBER]","Port to connect to on the remote host."]],f=new optparse.OptionParser(c),f.on("port",function(a,b){return e.port=b}),f.on(0,function(a){return d=a}),f.on(1,function(b){return b=b.split("@"),2===b.length?(e[a.host.username]=b[0],e[a.host.address]=b[1]):void 0}),f.on(2,function(a){return e.other_args=a}),g=b.replace(/\s+@/g,"@").replace(/@\s+/g,"@").split(/\s+/),f.parse(g),"ssh"===d&&e[a.host.username]&&e[a.host.address]&&null==e.other_args?(null==e.port&&(e.port=22),e):{}}}}]),a.constant("constant",{local_id:"local_id",host:{label:"label",username:"username",address:"address",port:"port",os_name:"os_name"},tag_host:{host:"host",tag:"tag"},status:{"delete":"DELETE_FAILED"}}),a.directive("alfred",["quickConnectParse","$timeout","constant",function(a,b,c){return{restrict:"E",replace:!0,templateUrl:"src/templates/alfred.html",scope:{uid:"=",updateEvent:"=",hosts:"=",groups:"=",taghosts:"=",tags:"=",heightCell:"=",placeholder:"=",template:"=",onAddGroupCallback:"&",onEditGroupCallback:"&",onRemoveGroupCallback:"&",onEnterHostCallback:"&",onAddHostCallback:"&",onEditHostCallback:"&",onRemoveHostCallback:"&"},controller:["$scope","$element",function(d,e){var f,g,h,i,j,k,l;return d.query=null,d.chosen_tags=[],d.current_group=null,d.children_group=[],d.path_groups=[],d.$on(d.updateEvent,function(a){return function(){return b(function(){return a.transformationData()})}}(this)),l=function(){return d.current_group=d.current_group?d.groups.find_by_id(d.current_group):null,_.each(d.chosen_tags,function(a,b){var c,e;return e=d.tags.find_by_id(a),e&&(c=_.extend(e.toJSON({do_not_encrypt:!1}),{is_chosen:!0})),d.chosen_tags[b]=c})},i=function(){var a,b,e;return b=d.current_group?d.current_group.get(""+c.local_id):null,e=b?d.groups.get_parent_groups(b):[],e.reverse(),a=b?_.rest(d.groups.get_all_children(b)):d.groups.get_root(),_.each(a,function(b,c){return a[c]=_.clone(b.toJSON({do_not_encrypt:!1}))}),_.each(e,function(a,b){return e[b]=_.clone(a.toJSON({do_not_encrypt:!1}))}),d.path_groups=e,d.children_group=a},g=function(a){var b,e,f;return f=[],b=[],e=[],_.each(d.chosen_tags,function(a){return e=_.union(e,a[""+c.local_id])}),f=d.taghosts.intersection_by_tags(e),_.each(f,function(a){return a.get(""+c.tag_host.host)[""+c.local_id]?b=_.union(b,a.get(""+c.tag_host.host)[""+c.local_id]):void 0}),a=_.filter(a,function(a){return _.contains(b,a.get(""+c.local_id))?a:void 0})},h=function(){var a;return a=[],a=d.current_group?d.hosts.filter_by_group(d.current_group.get(""+c.local_id),!0):_.clone(d.hosts.models),d.chosen_tags.length&&(a=g(a)),_.each(a,function(b){return function(b,c){return a[c]=a[c].toJSON({do_not_encrypt:!1})}}(this)),_.each(a,function(a){var b,e;return d.hosts.find_by_id(a)?(e=d.hosts.find_by_id(a).get_merged_identity(),e&&e.ssh_identity?a[c.host.username]=e.ssh_identity.get(c.host.username):e&&e.username&&(a[c.host.username]=e.username[c.host.username])):a[c.host.username]=null,b=a[c.host.os_name].toLowerCase(),b&&"none"!==b?a[c.host.os_name]=b:a[c.host.os_name]=""}),d.connections=a},j=function(){return _.each(d.copy_tags,function(a,b){return a.is_chosen=!1})},k=function(b){return function(c){var d,e;try{return d=a.parse(c),b.enterCallback(d)}catch(f){return e=f,console.warn(e,c)}}}(this),d.setSelectedConnection=function(a){return d.selectedIndex=a,d.$broadcast("setSelectedIndex",a)},d.is_selectedIndex=function(){return null!=d.selectedIndex&&d.selectedIndex>=0?!0:!1},d.filterByGroup=function(a){return function(c){var e;return e=c?d.groups.find_by_id(c):null,d.current_group=e,b(function(){return a.transformationData()})}}(this),d.filterByTag=function(a){return function(e){var f;return e?(e.local_id||(d.copy_tags=d.tags.toJSON({do_not_encrypt:!1}),e=_.findWhere(d.copy_tags,{label:e.label})),e.is_chosen===!0?(d.chosen_tags=_.without(d.chosen_tags,_.findWhere(d.chosen_tags,{local_id:e[""+c.local_id]})),f=_.findWhere(d.copy_tags,{local_id:e[""+c.local_id]}),f.is_chosen=!1):(d.chosen_tags=_.union(d.chosen_tags,e),f=_.findWhere(d.copy_tags,{local_id:e[""+c.local_id]}),f.is_chosen=!0)):(d.chosen_tags=[],j()),b(function(){return a.transformationData()})}}(this),d.enter=function(a){return function(){return d.query&&-1!==d.query.indexOf("ssh")?k(d.query):d.is_selectedIndex()?a.enterCallback(d.connections[d.selectedIndex]):void 0}}(this),d.editGroup=function(a){var b;return b=d.groups.get(a[""+c.local_id])||d.groups.get(a.id),b?d.onEditGroupCallback({group:b}):void 0},d.removeGroup=function(a){var b;return b=d.groups.get(a[""+c.local_id])||d.groups.get(a.id),b?d.onRemoveGroupCallback({group:b}):void 0},d.safeApply=function(a){return d.$$phase?void 0:a?d.$apply(a):d.$apply()},d.addConnection=function(a){return a.preventDefault(),a.stopPropagation(),d.onAddHostCallback({parent_group:d.current_group})},d.addGroup=function(a){return a.preventDefault(),a.stopPropagation(),d.onAddGroupCallback({parent_group:d.current_group})},jwerty.key("↑",function(){return d.$broadcast("arrow","up"),!1},e),jwerty.key("↓",function(){return d.$broadcast("arrow","down"),!1},e),jwerty.key("↩",function(a){return function(){return d.query&&-1!==d.query.indexOf("ssh")?k(d.query):d.$broadcast("enter")}}(this),e),f=function(){return _.find(d.copy_tags,function(a){return void 0===d.tags.find_by_id({local_id:a[""+c.local_id]})})},this.transformationData=function(){var a;return l(),d.tags?(a=f(),(!d.copy_tags||d.tags.length!==d.copy_tags.length||a)&&(a?_.each(d.copy_tags,function(a){return a=d.tags.find_by_id(a)?d.tags.find_by_id(a).toJSON({do_not_encrypt:!1}):null}):d.copy_tags=d.tags.toJSON({do_not_encrypt:!1}))):d.copy_tags=[],d.groups&&i(),d.hosts?h():void 0},this.setSelectedIndex=function(a){return d.setSelectedConnection(a)},this.enterCallback=function(a){var b;return a&&(b=d.hosts.get(a[""+c.local_id])||a)?d.onEnterHostCallback({host:b}):void 0},this.edit=function(a,b){var e;return a&&(e=d.hosts.get(a[""+c.local_id])||d.hosts.get(a.id))?d.onEditHostCallback({host:e,always_open_form:b}):void 0},this.removeConnection=function(a){var b;return a&&(b=d.hosts.get(a[""+c.local_id])||d.hosts.get(a.id))?d.onRemoveHostCallback({host:b}):void 0},this.transformationData(),this}],link:function(a,c,d,e){var f,g,h,i,j,k;return f=null,b(function(){return f=c.find("#alfred-input")}),k=function(){return f.focus(),!1},j=!0,h=function(){return j=a.query?!1:!0},i=function(){return a.selectedIndex=null,a.connectState=!1},g=function(b){return a.connectState=b,a.safeApply()},a.$on("setFocus",function(c,d){return d===a.uid?b(function(){return e.transformationData(),k()},100):void 0}),a.$watch(f,function(){return b(function(){return k()})}),a.setFocusAtInput=function(b){return $(b.target)[0]===c[0]?(a.setSelectedConnection(null),k()):!0},a.keydown=function(){return b(function(){return h(),g(a.query&&0===a.query.indexOf("ssh")?!0:!1)},50)},i()}}}]),a.directive("activeList",function(){return{require:"^alfred",restrict:"AE",templateUrl:"src/templates/active-connections.html",scope:{connections:"=",heightCell:"=",query:"=",selectedIndex:"=",currentGroup:"=",uid:"="},controller:["$scope",function(a){return a.setHeight=function(){return{height:a.heightCell+"px"}},a.safeApply=function(b){return a.$$phase?void 0:b?a.$apply(b):a.$apply()},this.select=function(b){return setSelectedConnection(b),a.safeApply()},this}],link:function(a,b,c,d){var e,f,g,h;return a.alfredController=d,a.$watch("selectedIndex",function(a){return d.setSelectedIndex(a)}),a.$on("arrow",function(a,b){return"up"===b?f():e()}),a.$on("setSelectedIndex",function(b,c){return a.selectedIndex=c}),a.$on("enter",function(b,c){var d;return null==c&&(c=g()),null!=a.filteredConnections[c]?(h(c),d=a.filteredConnections[c],a.connect(d,c)):void 0}),a.edit=function(a){var b;return b=!0,d.edit(a,b)},a.remove=function(a){return d.removeConnection(a)},a.select=function(b){var c;return h(b),c=!1,d.edit(a.filteredConnections[b],c)},a.connect=function(b,c){return a.select(c),d.enterCallback(b),!1},h=function(b){return a.selectedIndex=b},g=function(){return a.selectedIndex},e=function(){var b,c;return b=g(),c=a.filteredConnections[b+1],h(null==c?0:++b)},f=function(){var b,c;return b=g(),c=a.filteredConnections[b-1],h(null==c?a.filteredConnections.length-1:--b)}}}}),a.directive("connectionItem",function(){return{restrict:"A",require:"^activeList",link:function(a,b,c,d){return b.bind("mouseenter",function(){return d.select(a.key)})}}}),a.directive("whenScrolled",function(){return{restrict:"A",link:function(a,b){return b.bind("mousewheel",function(b){return b.originalEvent.wheelDelta<0?a.$apply(a.loadDown):a.$apply(a.loadUp),b.preventDefault()})}}}),a.filter("filterConnections",["$filter","constant",function(a,b){return function(c,d,e){var f,g,h;return h=e,f=a("filter"),g=f(h.connections,function(a){var c,d,e;return h.query?(d=function(a){return a[""+b.host.label]?-1!==a[""+b.host.label].indexOf(h.query):!1},c=function(a){return a[""+b.host.address]?-1!==a[""+b.host.address].indexOf(h.query):!1},e=function(a){return a[""+b.host.username]?-1!==a[""+b.host.username].indexOf(h.query):!1},d(a)||c(a)||e(a)):a}),g[h.selectedIndex]||(h.selectedIndex=null),g}}])}).call(this),angular.module("alfredDirective").run(["$templateCache",function(a){a.put("src/templates/alfred.html",'<div id="{{::uid}}" class="alfred-widget" flex-container="row" ng-click="setFocusAtInput($event)"> <div class="alfred flex-list" flex-item="8"> <div class="alfred-box"> <div class="toolbar alfred-toolbar"> <div class="tollbar-container"> <div class="input-row"> <div class="input-fiedls"> <md-input-container md-no-float> <input type="text" id="alfred-input" ng-model="query" ng-keydown="keydown($event)" placeholder={{::placeholder}}> </md-input-container> </div> <div class="menu-toolbar"> <button class="btn btn--m btn--blue btn--flat" ng-class="{\'btn--is-disabled\': !connectState && !is_selectedIndex()}" lx-ripple ng-click="enter()"> <span>connect</span> </button> </div> </div> </div> </div> <!--Filters by group, tag--> <div class="data-box"> <div class="groups-toolbar"> <div flex-container="row"> <div flex-item="8" class="group-content"> <div ng-if="path_groups.length" class="parent-group"> <ul> <li class="parent-group-list"> <a ng-click="filterByGroup(null)"><b>All hosts</b></a> </li> <li class="parent-group-list" ng-repeat="group in path_groups"> <a ng-click="filterByGroup(group)"> <i class="mdi mdi-chevron-right"></i> <span ng-bind="group.label"></span> </a> </li> </ul> </div> <!--Child groups--> <div class="children-group"> <ul> <li bindonce ng-repeat="group in children_group" context-menu class="panel panel-default position-fixed" data-target="child_group-{{::uid}}-{{::$index}}" bo-class="{ \'highlight\': highlight, \'expanded\' : expanded }"> <button class="btn btn--l group-child" lx-ripple ng-click="filterByGroup(group)"> <i class="group-child"></i> <span ng-bind="group.label"></span> </button> <div class="dropdown position-fixed" id="child_group-{{::uid}}-{{::$index}}"> <ul class="list context-menu group-menu" role="menu"> <li class="list-row" ng-click="editGroup(group)"> <div class="list-row__primary"> <i class="mdi mdi-pencil"></i> </div> <div class="list-row__content"> Edit </div> </li> <li class="list-row" ng-click="removeGroup(group)"> <div class="list-row__primary"> <i class="mdi mdi-delete"></i> </div> <div class="list-row__content"> <span>Remove</span> </div> </li> </ul> </div> </li> </ul> </div> </div> <div flex-item="4" class="tag-content"> <div class="tags"> <lx-dropdown class="tag-toolbar" position="right"> <button class="btn btn--m btn--icon" lx-ripple lx-dropdown-toggle> <i class="mdi mdi-tag tag"></i> </button> <lx-dropdown-menu class="tags-list"> <ul class="tag-list"> <li class="list-row list-row--has-primary"> <div class="list-primary-tile"> </div> <div class="list-content-tile"> <a class="dropdown-link" ng-click="filterByTag()"><b>Deselect all</b></a> </div> </li> <li class="list-row list-row--has-primary" bindonce ng-repeat="tag in copy_tags"> <div class="list-primary-tile"> <i bo-if="tag.is_chosen" class="mdi mdi-check"></i> </div> <div class="list-content-tile"> <a class="dropdown-link" ng-click="filterByTag(tag)"> <span>{{::tag.label}}</span></a> </div> </li> </ul> </lx-dropdown-menu> </lx-dropdown> <ul> <li class="mb" bindonce ng-repeat="tag in chosen_tags"> <button class="btn btn--s btn--blue btn--raised" ng-click="filterByTag(tag)" lx-ripple> <span bo-bind="tag.label"></span> </button> </li> </ul> </div> </div> </div> </div> <!--List--> <div class="content-box"> <div class="table"> <div id="list"> <div class="host-list"> <active-list connections="connections" uid="uid" height-cell="heightCell" query="query" selected-index="selectedIndex" current-group="current_group"> </active-list> </div> </div> </div> </div> </div> </div> <div class="fab add-buttom"> <button class="fab__primary btn btn--l btn--blue btn--fab" lx-ripple> <i class="mdi mdi-plus"></i> <i class="mdi mdi-plus"></i> </button> <div class="fab__actions fab__actions--left"> <button class="btn btn--m btn--blue btn--fab group" lx-ripple lx-tooltip="Add new group" tooltip-position="top" ng-click="addGroup($event)"> <i class="add_new_group"></i> </button> <button class="btn btn--m btn--blue btn--fab host" lx-ripple lx-tooltip="Add new host" tooltip-position="top" ng-click="addConnection($event)"> <i class="add_new_host"></i> </button> </div> </div> </div> </div> '),a.put("src/templates/active-connections.html",'<div id="fixed"> <ul class="list hosts"> <li bindonce ng-repeat="(key,connection) in filteredConnections=(connections | filterConnections:query:this) track by key" id="{{::key}}" ng-click="select(key)" ng-dblclick="connect(connection, key)" key="{{::key}}" ng-class="{ active: (key===selectedIndex) }" bo-style="setHeight()" context-menu="select(key)" context-menu-disabled="is_disable_context_menu" class="panel panel-default position-fixed list-row" data-target="menu-{{::uid}}-{{::$index}}" bo-class="{ \'highlight\': highlight, \'expanded\' : expanded }"> <div class="list-row__primary"> <i bo-if="connection.os_name" class="icon icon--l" bo-class="connection.os_name"></i> <i bo-if="!connection.os_name" class="icon icon--l host_default_icon"></i> </div> <div class="list-row__content"> <span ng-if="connection.label" class="display-block" ng-bind="connection.label"></span> <span ng-if="!connection.label" class="display-block" ng-bind="connection.address"></span> <span class="display-block fs-body-1 description" ng-bind="connection.username"></span> <div class="dropdown position-fixed" id="menu-{{::uid}}-{{::$index}}"> <ul class="list context-menu host-menu" role="menu"> <li class="list-row" ng-click="connect(connection, key)"> <div class="list-row__primary"> <i class="connect-icon"></i> </div> <div class="list-row__content"> Connect </div> </li> <li class="list-row" ng-click="edit(connection)"> <div class="list-row__primary"> <i class="mdi mdi-pencil"></i> </div> <div class="list-row__content"> <span>Edit</span> </div> </li> <li class="list-row" ng-click="remove(connection)"> <div class="list-row__primary"> <i class="mdi mdi-delete"></i> </div> <div class="list-row__content"> <span>Remove</span> </div> </li> </ul> </div> </div> </li> </ul> </div> ')}]);